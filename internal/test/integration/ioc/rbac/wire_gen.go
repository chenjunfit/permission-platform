// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package rbac

import (
	"github.com/permission-dev/internal/repository"
	"github.com/permission-dev/internal/repository/dao"
	"github.com/permission-dev/internal/service/rbac"
	"github.com/permission-dev/internal/test/ioc"
)

// Injectors from wire.go:

func Init() *Service {
	db := ioc.InitDBAndTables()
	roleDAO := dao.NewRoleDao(db)
	roleRepository := repository.NewRoleRepository(roleDAO)
	resourceDao := dao.NewResourceDao(db)
	resourceRepository := repository.NewResourceRepository(resourceDao)
	permissionDAO := dao.NewPermissionDAO(db)
	permissionRepository := repository.NewPermissionRepository(permissionDAO)
	userRoleDAO := dao.NewUserDaoDAO(db)
	userRoleRepository := repository.NewUserRoleRepository(userRoleDAO)
	rolePermissionDAO := dao.NewRolePermissionDAO(db)
	rolePermissionRepository := repository.NewRolePermissionRepository(rolePermissionDAO)
	roleInclusionDAO := dao.NewRoleInclusionDAO(db)
	roleIncludeRepository := repository.NewRoleIncludeRepository(roleInclusionDAO)
	businessConfigDAO := dao.NewBusinessConfigDAO(db)
	businessConfigRepository := repository.NewBusinessConfigRepository(businessConfigDAO)
	userPermissionDAO := dao.NewUserPermissionDAO(db)
	userPermissionRepository := repository.NewUserPermissionRepository(userPermissionDAO)
	token := ioc.InitJWTToken()
	service := rbac.NewService(roleRepository, resourceRepository, permissionRepository, userRoleRepository, rolePermissionRepository, roleIncludeRepository, userPermissionRepository, businessConfigRepository, token)
	rbacService := &Service{
		RoleRepo:           roleRepository,
		ResourceRepo:       resourceRepository,
		PermissionRepo:     permissionRepository,
		UserRoleRepo:       userRoleRepository,
		RolePermissionRepo: rolePermissionRepository,
		RoleIncludeRepo:    roleIncludeRepository,
		BusinessConfigRepo: businessConfigRepository,
		UserPermissionRepo: userPermissionRepository,
		Svc:                service,
	}
	return rbacService
}

// wire.go:

type Service struct {
	RoleRepo           repository.RoleRepository
	ResourceRepo       repository.ResourceRepository
	PermissionRepo     repository.PermissionRepository
	UserRoleRepo       repository.UserRoleRepository
	RolePermissionRepo repository.RolePermissionRepository
	RoleIncludeRepo    repository.RoleIncludeRepository
	BusinessConfigRepo repository.BusinessConfigRepository
	UserPermissionRepo repository.UserPermissionRepository
	Svc                rbac.Service
}
